<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.respository.MemberrechargeMapper">
  <resultMap id="BaseResultMap" type="com.example.entity.Memberrecharge">
    <id column="numbers" jdbcType="INTEGER" property="numbers" />
    <result column="recharge_Date" jdbcType="VARCHAR" property="rechargeDate" />
    <result column="member_Idcard" jdbcType="INTEGER" property="memberIdcard" />
    <result column="member_Name" jdbcType="VARCHAR" property="memberName" />
    <result column="member_TypeName" jdbcType="VARCHAR" property="memberTypename" />
    <result column="recharge_type" jdbcType="VARCHAR" property="rechargeType" />
    <result column="realrecharge" jdbcType="INTEGER" property="realrecharge" />
    <result column="current_blance" jdbcType="INTEGER" property="currentBlance" />
    <result column="payment" jdbcType="VARCHAR" property="payment" />
    <result column="employees" jdbcType="VARCHAR" property="employees" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    numbers, recharge_Date, member_Idcard, member_Name, member_TypeName, recharge_type, 
    realrecharge, current_blance, payment, employees
  </sql>
  <select id="selectByExample" parameterType="com.example.entity.MemberrechargeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from memberrecharge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="PageSize != null and PageSize !=0 and StartRow!=null">
      limit  #{StartRow},#{PageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from memberrecharge
    where numbers = #{numbers,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from memberrecharge
    where numbers = #{numbers,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.entity.MemberrechargeExample">
    delete from memberrecharge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.entity.Memberrecharge">
    insert into memberrecharge (numbers, recharge_Date, member_Idcard, 
      member_Name, member_TypeName, recharge_type, 
      realrecharge, current_blance, payment, 
      employees)
    values (#{numbers,jdbcType=INTEGER}, #{rechargeDate,jdbcType=VARCHAR}, #{memberIdcard,jdbcType=INTEGER}, 
      #{memberName,jdbcType=VARCHAR}, #{memberTypename,jdbcType=VARCHAR}, #{rechargeType,jdbcType=VARCHAR}, 
      #{realrecharge,jdbcType=INTEGER}, #{currentBlance,jdbcType=INTEGER}, #{payment,jdbcType=VARCHAR}, 
      #{employees,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.entity.Memberrecharge">
    insert into memberrecharge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="numbers != null">
        numbers,
      </if>
      <if test="rechargeDate != null">
        recharge_Date,
      </if>
      <if test="memberIdcard != null">
        member_Idcard,
      </if>
      <if test="memberName != null">
        member_Name,
      </if>
      <if test="memberTypename != null">
        member_TypeName,
      </if>
      <if test="rechargeType != null">
        recharge_type,
      </if>
      <if test="realrecharge != null">
        realrecharge,
      </if>
      <if test="currentBlance != null">
        current_blance,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="employees != null">
        employees,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="numbers != null">
        #{numbers,jdbcType=INTEGER},
      </if>
      <if test="rechargeDate != null">
        #{rechargeDate,jdbcType=VARCHAR},
      </if>
      <if test="memberIdcard != null">
        #{memberIdcard,jdbcType=INTEGER},
      </if>
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberTypename != null">
        #{memberTypename,jdbcType=VARCHAR},
      </if>
      <if test="rechargeType != null">
        #{rechargeType,jdbcType=VARCHAR},
      </if>
      <if test="realrecharge != null">
        #{realrecharge,jdbcType=INTEGER},
      </if>
      <if test="currentBlance != null">
        #{currentBlance,jdbcType=INTEGER},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=VARCHAR},
      </if>
      <if test="employees != null">
        #{employees,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.entity.MemberrechargeExample" resultType="java.lang.Long">
    select count(*) from memberrecharge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update memberrecharge
    <set>
      <if test="record.numbers != null">
        numbers = #{record.numbers,jdbcType=INTEGER},
      </if>
      <if test="record.rechargeDate != null">
        recharge_Date = #{record.rechargeDate,jdbcType=VARCHAR},
      </if>
      <if test="record.memberIdcard != null">
        member_Idcard = #{record.memberIdcard,jdbcType=INTEGER},
      </if>
      <if test="record.memberName != null">
        member_Name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberTypename != null">
        member_TypeName = #{record.memberTypename,jdbcType=VARCHAR},
      </if>
      <if test="record.rechargeType != null">
        recharge_type = #{record.rechargeType,jdbcType=VARCHAR},
      </if>
      <if test="record.realrecharge != null">
        realrecharge = #{record.realrecharge,jdbcType=INTEGER},
      </if>
      <if test="record.currentBlance != null">
        current_blance = #{record.currentBlance,jdbcType=INTEGER},
      </if>
      <if test="record.payment != null">
        payment = #{record.payment,jdbcType=VARCHAR},
      </if>
      <if test="record.employees != null">
        employees = #{record.employees,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update memberrecharge
    set numbers = #{record.numbers,jdbcType=INTEGER},
      recharge_Date = #{record.rechargeDate,jdbcType=VARCHAR},
      member_Idcard = #{record.memberIdcard,jdbcType=INTEGER},
      member_Name = #{record.memberName,jdbcType=VARCHAR},
      member_TypeName = #{record.memberTypename,jdbcType=VARCHAR},
      recharge_type = #{record.rechargeType,jdbcType=VARCHAR},
      realrecharge = #{record.realrecharge,jdbcType=INTEGER},
      current_blance = #{record.currentBlance,jdbcType=INTEGER},
      payment = #{record.payment,jdbcType=VARCHAR},
      employees = #{record.employees,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.Memberrecharge">
    update memberrecharge
    <set>
      <if test="rechargeDate != null">
        recharge_Date = #{rechargeDate,jdbcType=VARCHAR},
      </if>
      <if test="memberIdcard != null">
        member_Idcard = #{memberIdcard,jdbcType=INTEGER},
      </if>
      <if test="memberName != null">
        member_Name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberTypename != null">
        member_TypeName = #{memberTypename,jdbcType=VARCHAR},
      </if>
      <if test="rechargeType != null">
        recharge_type = #{rechargeType,jdbcType=VARCHAR},
      </if>
      <if test="realrecharge != null">
        realrecharge = #{realrecharge,jdbcType=INTEGER},
      </if>
      <if test="currentBlance != null">
        current_blance = #{currentBlance,jdbcType=INTEGER},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=VARCHAR},
      </if>
      <if test="employees != null">
        employees = #{employees,jdbcType=VARCHAR},
      </if>
    </set>
    where numbers = #{numbers,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.entity.Memberrecharge">
    update memberrecharge
    set recharge_Date = #{rechargeDate,jdbcType=VARCHAR},
      member_Idcard = #{memberIdcard,jdbcType=INTEGER},
      member_Name = #{memberName,jdbcType=VARCHAR},
      member_TypeName = #{memberTypename,jdbcType=VARCHAR},
      recharge_type = #{rechargeType,jdbcType=VARCHAR},
      realrecharge = #{realrecharge,jdbcType=INTEGER},
      current_blance = #{currentBlance,jdbcType=INTEGER},
      payment = #{payment,jdbcType=VARCHAR},
      employees = #{employees,jdbcType=VARCHAR}
    where numbers = #{numbers,jdbcType=INTEGER}
  </update>
</mapper>