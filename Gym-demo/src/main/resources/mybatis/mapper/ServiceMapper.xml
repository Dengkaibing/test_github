<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.respository.ServiceMapper">
  <resultMap id="BaseResultMap" type="com.example.entity.Service">
    <id column="Service_ID" jdbcType="VARCHAR" property="serviceId" />
    <result column="Service_name" jdbcType="VARCHAR" property="serviceName" />
    <result column="Service_type" jdbcType="VARCHAR" property="serviceType" />
    <result column="Service_price" jdbcType="DOUBLE" property="servicePrice" />
    <result column="Service_credit" jdbcType="VARCHAR" property="serviceCredit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Service_ID, Service_name, Service_type, Service_price, Service_credit
  </sql>
  <select id="selectByExample" parameterType="com.example.entity.ServiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from service
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="PageSize != null and PageSize !=0 and StartRow!=null">
      limit  #{StartRow},#{PageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from service
    where Service_ID = #{serviceId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from service
    where Service_ID = #{serviceId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.entity.ServiceExample">
    delete from service
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.entity.Service">
    insert into service (Service_ID, Service_name, Service_type, 
      Service_price, Service_credit)
    values (#{serviceId,jdbcType=VARCHAR}, #{serviceName,jdbcType=VARCHAR}, #{serviceType,jdbcType=VARCHAR}, 
      #{servicePrice,jdbcType=DOUBLE}, #{serviceCredit,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.entity.Service">
    insert into service
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="serviceId != null">
        Service_ID,
      </if>
      <if test="serviceName != null">
        Service_name,
      </if>
      <if test="serviceType != null">
        Service_type,
      </if>
      <if test="servicePrice != null">
        Service_price,
      </if>
      <if test="serviceCredit != null">
        Service_credit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="serviceId != null">
        #{serviceId,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null">
        #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="serviceType != null">
        #{serviceType,jdbcType=VARCHAR},
      </if>
      <if test="servicePrice != null">
        #{servicePrice,jdbcType=DOUBLE},
      </if>
      <if test="serviceCredit != null">
        #{serviceCredit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.entity.ServiceExample" resultType="java.lang.Long">
    select count(*) from service
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update service
    <set>
      <if test="record.serviceId != null">
        Service_ID = #{record.serviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceName != null">
        Service_name = #{record.serviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceType != null">
        Service_type = #{record.serviceType,jdbcType=VARCHAR},
      </if>
      <if test="record.servicePrice != null">
        Service_price = #{record.servicePrice,jdbcType=DOUBLE},
      </if>
      <if test="record.serviceCredit != null">
        Service_credit = #{record.serviceCredit,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update service
    set Service_ID = #{record.serviceId,jdbcType=VARCHAR},
      Service_name = #{record.serviceName,jdbcType=VARCHAR},
      Service_type = #{record.serviceType,jdbcType=VARCHAR},
      Service_price = #{record.servicePrice,jdbcType=DOUBLE},
      Service_credit = #{record.serviceCredit,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.Service">
    update service
    <set>
      <if test="serviceName != null">
        Service_name = #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="serviceType != null">
        Service_type = #{serviceType,jdbcType=VARCHAR},
      </if>
      <if test="servicePrice != null">
        Service_price = #{servicePrice,jdbcType=DOUBLE},
      </if>
      <if test="serviceCredit != null">
        Service_credit = #{serviceCredit,jdbcType=VARCHAR},
      </if>
    </set>
    where Service_ID = #{serviceId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.entity.Service">
    update service
    set Service_name = #{serviceName,jdbcType=VARCHAR},
      Service_type = #{serviceType,jdbcType=VARCHAR},
      Service_price = #{servicePrice,jdbcType=DOUBLE},
      Service_credit = #{serviceCredit,jdbcType=VARCHAR}
    where Service_ID = #{serviceId,jdbcType=VARCHAR}
  </update>
  <select id="SelectServiceName" resultType="java.lang.String">
    select Service_name
    from service
  </select>
  <select id="SelectServiceType" resultType="java.lang.String">
    select Service_type
    from service
  </select>
</mapper>