<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.respository.MemberMapper">
  <resultMap id="BaseResultMap" type="com.example.entity.Member">
    <id column="member_Id" jdbcType="INTEGER" property="memberId" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="member_sex" jdbcType="VARCHAR" property="memberSex" />
    <result column="member_Idcard" jdbcType="INTEGER" property="memberIdcard" />
    <result column="member_Type" jdbcType="VARCHAR" property="memberType" />
    <result column="member_telephone" jdbcType="VARCHAR" property="memberTelephone" />
    <result column="member_counselor" jdbcType="VARCHAR" property="memberCounselor" />
    <result column="card_balance" jdbcType="DOUBLE" property="cardBalance" />
    <result column="credit" jdbcType="INTEGER" property="credit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    member_Id, member_name, member_sex, member_Idcard, member_Type, member_telephone, 
    member_counselor, card_balance, credit
  </sql>
  <select id="selectByExample" parameterType="com.example.entity.MemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="PageSize != null and PageSize !=0 and StartRow!=null">
      limit  #{StartRow},#{PageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
    where member_Id = #{memberId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member
    where member_Id = #{memberId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.entity.MemberExample">
    delete from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.entity.Member">
    insert into member (member_Id, member_name, member_sex, 
      member_Idcard, member_Type, member_telephone, 
      member_counselor, card_balance, credit
      )
    values (#{memberId,jdbcType=INTEGER}, #{memberName,jdbcType=VARCHAR}, #{memberSex,jdbcType=VARCHAR}, 
      #{memberIdcard,jdbcType=INTEGER}, #{memberType,jdbcType=VARCHAR}, #{memberTelephone,jdbcType=VARCHAR}, 
      #{memberCounselor,jdbcType=VARCHAR}, #{cardBalance,jdbcType=DOUBLE}, #{credit,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.entity.Member">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        member_Id,
      </if>
      <if test="memberName != null">
        member_name,
      </if>
      <if test="memberSex != null">
        member_sex,
      </if>
      <if test="memberIdcard != null">
        member_Idcard,
      </if>
      <if test="memberType != null">
        member_Type,
      </if>
      <if test="memberTelephone != null">
        member_telephone,
      </if>
      <if test="memberCounselor != null">
        member_counselor,
      </if>
      <if test="cardBalance != null">
        card_balance,
      </if>
      <if test="credit != null">
        credit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberSex != null">
        #{memberSex,jdbcType=VARCHAR},
      </if>
      <if test="memberIdcard != null">
        #{memberIdcard,jdbcType=INTEGER},
      </if>
      <if test="memberType != null">
        #{memberType,jdbcType=VARCHAR},
      </if>
      <if test="memberTelephone != null">
        #{memberTelephone,jdbcType=VARCHAR},
      </if>
      <if test="memberCounselor != null">
        #{memberCounselor,jdbcType=VARCHAR},
      </if>
      <if test="cardBalance != null">
        #{cardBalance,jdbcType=DOUBLE},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.entity.MemberExample" resultType="java.lang.Long">
    select count(*) from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member
    <set>
      <if test="record.memberId != null">
        member_Id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.memberName != null">
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberSex != null">
        member_sex = #{record.memberSex,jdbcType=VARCHAR},
      </if>
      <if test="record.memberIdcard != null">
        member_Idcard = #{record.memberIdcard,jdbcType=INTEGER},
      </if>
      <if test="record.memberType != null">
        member_Type = #{record.memberType,jdbcType=VARCHAR},
      </if>
      <if test="record.memberTelephone != null">
        member_telephone = #{record.memberTelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.memberCounselor != null">
        member_counselor = #{record.memberCounselor,jdbcType=VARCHAR},
      </if>
      <if test="record.cardBalance != null">
        card_balance = #{record.cardBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.credit != null">
        credit = #{record.credit,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member
    set member_Id = #{record.memberId,jdbcType=INTEGER},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      member_sex = #{record.memberSex,jdbcType=VARCHAR},
      member_Idcard = #{record.memberIdcard,jdbcType=INTEGER},
      member_Type = #{record.memberType,jdbcType=VARCHAR},
      member_telephone = #{record.memberTelephone,jdbcType=VARCHAR},
      member_counselor = #{record.memberCounselor,jdbcType=VARCHAR},
      card_balance = #{record.cardBalance,jdbcType=DOUBLE},
      credit = #{record.credit,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.Member">
    update member
    <set>
      <if test="memberName != null">
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberSex != null">
        member_sex = #{memberSex,jdbcType=VARCHAR},
      </if>
      <if test="memberIdcard != null">
        member_Idcard = #{memberIdcard,jdbcType=INTEGER},
      </if>
      <if test="memberType != null">
        member_Type = #{memberType,jdbcType=VARCHAR},
      </if>
      <if test="memberTelephone != null">
        member_telephone = #{memberTelephone,jdbcType=VARCHAR},
      </if>
      <if test="memberCounselor != null">
        member_counselor = #{memberCounselor,jdbcType=VARCHAR},
      </if>
      <if test="cardBalance != null">
        card_balance = #{cardBalance,jdbcType=DOUBLE},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=INTEGER},
      </if>
    </set>
    where member_Id = #{memberId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.entity.Member">
    update member
    set member_name = #{memberName,jdbcType=VARCHAR},
      member_sex = #{memberSex,jdbcType=VARCHAR},
      member_Idcard = #{memberIdcard,jdbcType=INTEGER},
      member_Type = #{memberType,jdbcType=VARCHAR},
      member_telephone = #{memberTelephone,jdbcType=VARCHAR},
      member_counselor = #{memberCounselor,jdbcType=VARCHAR},
      card_balance = #{cardBalance,jdbcType=DOUBLE},
      credit = #{credit,jdbcType=INTEGER}
    where member_Id = #{memberId,jdbcType=INTEGER}
  </update>
  <select id="SelectmemberCounselor" resultType="java.lang.String">
    select member_counselor
    from member
  </select>
</mapper>