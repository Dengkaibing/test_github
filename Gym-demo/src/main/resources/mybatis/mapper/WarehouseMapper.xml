<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.respository.WarehouseMapper">
  <resultMap id="BaseResultMap" type="com.example.entity.Warehouse">
    <id column="product_Id" jdbcType="INTEGER" property="productId" />
    <result column="product_Name" jdbcType="VARCHAR" property="productName" />
    <result column="product_type" jdbcType="VARCHAR" property="productType" />
    <result column="sell_price" jdbcType="DOUBLE" property="sellPrice" />
    <result column="purchchasing_price" jdbcType="DOUBLE" property="purchchasingPrice" />
    <result column="stock_Number" jdbcType="INTEGER" property="stockNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    product_Id, product_Name, product_type, sell_price, purchchasing_price, stock_Number
  </sql>
  <select id="selectByExample" parameterType="com.example.entity.WarehouseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from warehouse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="PageSize != null and PageSize !=0 and StartRow!=null">
      limit  #{StartRow},#{PageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from warehouse
    where product_Id = #{productId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from warehouse
    where product_Id = #{productId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.entity.WarehouseExample">
    delete from warehouse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.entity.Warehouse">
    insert into warehouse (product_Id, product_Name, product_type, 
      sell_price, purchchasing_price, stock_Number
      )
    values (#{productId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{productType,jdbcType=VARCHAR}, 
      #{sellPrice,jdbcType=DOUBLE}, #{purchchasingPrice,jdbcType=DOUBLE}, #{stockNumber,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.entity.Warehouse">
    insert into warehouse
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_Id,
      </if>
      <if test="productName != null">
        product_Name,
      </if>
      <if test="productType != null">
        product_type,
      </if>
      <if test="sellPrice != null">
        sell_price,
      </if>
      <if test="purchchasingPrice != null">
        purchchasing_price,
      </if>
      <if test="stockNumber != null">
        stock_Number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productType != null">
        #{productType,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null">
        #{sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="purchchasingPrice != null">
        #{purchchasingPrice,jdbcType=DOUBLE},
      </if>
      <if test="stockNumber != null">
        #{stockNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.entity.WarehouseExample" resultType="java.lang.Long">
    select count(*) from warehouse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update warehouse
    <set>
      <if test="record.productId != null">
        product_Id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productName != null">
        product_Name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productType != null">
        product_type = #{record.productType,jdbcType=VARCHAR},
      </if>
      <if test="record.sellPrice != null">
        sell_price = #{record.sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.purchchasingPrice != null">
        purchchasing_price = #{record.purchchasingPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.stockNumber != null">
        stock_Number = #{record.stockNumber,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update warehouse
    set product_Id = #{record.productId,jdbcType=INTEGER},
      product_Name = #{record.productName,jdbcType=VARCHAR},
      product_type = #{record.productType,jdbcType=VARCHAR},
      sell_price = #{record.sellPrice,jdbcType=DOUBLE},
      purchchasing_price = #{record.purchchasingPrice,jdbcType=DOUBLE},
      stock_Number = #{record.stockNumber,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.Warehouse">
    update warehouse
    <set>
      <if test="productName != null">
        product_Name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productType != null">
        product_type = #{productType,jdbcType=VARCHAR},
      </if>
      <if test="sellPrice != null">
        sell_price = #{sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="purchchasingPrice != null">
        purchchasing_price = #{purchchasingPrice,jdbcType=DOUBLE},
      </if>
      <if test="stockNumber != null">
        stock_Number = #{stockNumber,jdbcType=INTEGER},
      </if>
    </set>
    where product_Id = #{productId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.entity.Warehouse">
    update warehouse
    set product_Name = #{productName,jdbcType=VARCHAR},
      product_type = #{productType,jdbcType=VARCHAR},
      sell_price = #{sellPrice,jdbcType=DOUBLE},
      purchchasing_price = #{purchchasingPrice,jdbcType=DOUBLE},
      stock_Number = #{stockNumber,jdbcType=INTEGER}
    where product_Id = #{productId,jdbcType=INTEGER}
  </update>
</mapper>